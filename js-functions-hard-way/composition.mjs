// https://ru.hexlet.io/challenges/js_functions_hard_way_composition_exercise/instance
// https://ru.hexlet.io/code_reviews/1198389

// JS: Функциональное программирование
// Испытание: 
// ---------------------------------------

/*
Реализуйте и экспортируйте по умолчанию функцию, которая принимает на вход две
других одноаргументных функции и возвращает новую функцию. Эта новая функция
также принимает на вход один параметр и представляет собой композицию двух
исходных одноаргументных функций (эти функции вызываются последовательно в
  обратном порядке: например, при порядке f, g ===> f(g(x))).
*/

const compose = (func1, func2) => (...args) => func1(func2(...args));

// ---------------------------------------------------------------------------
const f = compose(Math.sqrt, Math.abs);

console.log(f(-4)); // 2


console.log(compose((v) => v, (v) => v)(10));         // 10
console.log(compose((v) => v + 2, (v) => v)(10));     // 12
console.log(compose((v) => v, v => (v) - 2)(10));     // 8
console.log(compose((v) => v ** 2, (v) => v - 2)(2)); // 0
console.log(compose((v) => v - 2, (v) => v ** 2)(2)); // 2